{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/data/node/reactjs/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst {\n  Component\n} = require('react');\n\nconst axios = require('axios'); // keep a util handy to dump objects\n\n\nconst util = require('util'); //console.log(util.inspect(error, {depth: null}))\n// grab our env variables\n\n\nconst dotenv = require('dotenv');\n/*\nconsole.log('--------------------------------------');\nconsole.log(util.inspect(process.env, {depth: null}))\nconsole.log('--------------------------------------');\n*/\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props); // grab our environemtn vars\n\n    this.onDeleteClick = event => {\n      console.log(event.target.dataset.id); // set up some headers\n\n      const options = {\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8'\n        }\n      }; // nuke the file from S3 and the database using query strings\n      //axios.delete(this.state.apiUrl + '/delete?fileId=' + event.target.dataset.id, options);\n      // nuke the file from S3 and the database using JSON in body\n\n      axios.delete(this.state.apiUrl + '/delete', {\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8'\n        },\n        data: {\n          'fileId': event.target.dataset.id\n        }\n      });\n    };\n\n    this.onFileChange = event => {\n      // Update the state\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onTypeChange = event => {\n      // Update the state\n      this.setState({\n        fileTypeHelp: this.state.fileTypeInfo[event.target.value].help\n      });\n      this.setState({\n        selectValue: event.target.value\n      });\n    };\n\n    this.onDescChange = event => {\n      // Update the state\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      // Create an object of formData\n      const formData = new FormData(); // Update the formData object\n\n      formData.append(\"file\", this.state.selectedFile, this.state.selectedFile.name);\n      formData.append(\"fileType\", this.state.fileTypeInfo[this.state.selectValue].type);\n      formData.append(\"description\", this.state.description); // Request made to the backend api\n      // Send formData object\n\n      axios.post(this.state.apiUrl + '/upload', formData);\n    };\n\n    this.fileData = () => {\n      //console.log(this.state.selectedFile);\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-t-10px\",\n          children: [\"File Name: \", this.state.selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.getFilesTable = () => {\n      //console.log(this.state.selectedFile);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-hover table-bordered table-striped m-t-15px\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.fileRows\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this)\n      }, void 0, false);\n    };\n\n    dotenv.config(); // set \"the state\" (great old school show, btw)\n\n    this.state = {\n      apiUrl: 'http://' + process.env.REACT_APP_UPLOAD_API_HOST + ':' + process.env.REACT_APP_UPLOAD_API_PORT,\n      selectOptions: [],\n      selectValue: 0,\n      fileTypeInfo: [],\n      selectedFile: '',\n      fileTypeHelp: '',\n      fileRows: []\n    };\n    /*\n    this.onFileChange = this.onFileChange.bind(this);\n    this.onTypeChange = this.onTypeChange.bind(this);\n    this.onDescChange = this.onDescChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    */\n  } // could use to break some of this out into functions\n\n\n  componentDidMount() {\n    // grab our file type info and build the select options\n    axios.get(this.state.apiUrl + '/getFileTypes').then(response => {\n      const data = response.data.data;\n      this.setState({\n        fileTypeInfo: data\n      });\n      this.setState({\n        fileTypeHelp: data[this.state.selectValue].help\n      });\n      const selectOptions = [];\n\n      for (let i = 0; i < data.length; i++) {\n        //console.log(i)\n        selectOptions.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i,\n          children: data[i].text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 36\n        }, this));\n      }\n\n      this.setState({\n        selectOptions: selectOptions\n      });\n    }); // grab list of files and build a table\n\n    axios.get(this.state.apiUrl + '/getFiles').then(response => {\n      const data = response.data.data;\n      const rows = [];\n\n      for (let i = 0; i < data.length; i++) {\n        rows.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data[i].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data[i].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"Delete-Column\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger btn-sm\",\n              onClick: this.onDeleteClick,\n              \"data-id\": data[i]._id,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), \" Delete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 27\n        }, this));\n      }\n\n      this.setState({\n        fileRows: rows\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            className: \"App-logo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"File Upload using React!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"Main\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-hover table-bordered\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"w-15-pct\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"description\",\n                    className: \"form-control\",\n                    onChange: this.onDescChange,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"w-15-pct\",\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"Left m-l-10px\",\n                    onChange: this.onTypeChange,\n                    value: this.state.selectValue,\n                    required: true,\n                    children: this.state.selectOptions\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"w-15-pct\",\n                  children: \"Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    className: \"form-control\",\n                    onChange: this.onFileChange,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"form-text text-muted\",\n                    children: this.state.fileTypeHelp\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: this.onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), \" Upload File\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), this.fileData(), this.getFilesTable()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/data/node/reactjs/src/App.js"],"names":["Component","require","axios","util","dotenv","App","constructor","props","onDeleteClick","event","console","log","target","dataset","id","options","headers","delete","state","apiUrl","data","onFileChange","setState","selectedFile","files","onTypeChange","fileTypeHelp","fileTypeInfo","value","help","selectValue","onDescChange","description","onSubmit","formData","FormData","append","name","type","post","fileData","getFilesTable","fileRows","config","process","env","REACT_APP_UPLOAD_API_HOST","REACT_APP_UPLOAD_API_PORT","selectOptions","componentDidMount","get","then","response","i","length","push","text","rows","_id","render","logo"],"mappings":";;;;AACA,OAAO,WAAP;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAgBC,OAAO,CAAC,OAAD,CAA7B;;AAEA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB,C,CAEC;;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB,C,CACA;AAEA;;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;AAEA;AACD;AACA;AACA;AACA;;;AAEA,MAAMI,GAAN,SAAkBL,SAAlB,CAA4B;AACxBM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AAHe,SAiEnBC,aAjEmB,GAiEHC,KAAK,IAAI;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,OAAb,CAAqBC,EAAjC,EADqB,CAErB;;AACA,YAAMC,OAAO,GAAG;AACZC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB;AADG,OAAhB,CAHqB,CAOrB;AACA;AAEA;;AACAd,MAAAA,KAAK,CAACe,MAAN,CACI,KAAKC,KAAL,CAAWC,MAAX,GAAoB,SADxB,EACmC;AAC3BH,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SADkB;AAI3BI,QAAAA,IAAI,EAAE;AACF,oBAAUX,KAAK,CAACG,MAAN,CAAaC,OAAb,CAAqBC;AAD7B;AAJqB,OADnC;AASH,KArFkB;;AAAA,SAwFnBO,YAxFmB,GAwFJZ,KAAK,IAAI;AACpB;AACA,WAAKa,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEd,KAAK,CAACG,MAAN,CAAaY,KAAb,CAAmB,CAAnB;AAAhB,OAAd;AACH,KA3FkB;;AAAA,SA8FnBC,YA9FmB,GA8FJhB,KAAK,IAAI;AACpB;AACA,WAAKa,QAAL,CAAc;AAAEI,QAAAA,YAAY,EAAE,KAAKR,KAAL,CAAWS,YAAX,CAAwBlB,KAAK,CAACG,MAAN,CAAagB,KAArC,EAA4CC;AAA5D,OAAd;AACA,WAAKP,QAAL,CAAc;AAAEQ,QAAAA,WAAW,EAAErB,KAAK,CAACG,MAAN,CAAagB;AAA5B,OAAd;AACH,KAlGkB;;AAAA,SAqGnBG,YArGmB,GAqGJtB,KAAK,IAAI;AACpB;AACA,WAAKa,QAAL,CAAc;AAAEU,QAAAA,WAAW,EAAEvB,KAAK,CAACG,MAAN,CAAagB;AAA5B,OAAd;AACH,KAxGkB;;AAAA,SA2GnBK,QA3GmB,GA2GR,MAAM;AACb;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAFa,CAIb;;AACAD,MAAAA,QAAQ,CAACE,MAAT,CACI,MADJ,EAEI,KAAKlB,KAAL,CAAWK,YAFf,EAGI,KAAKL,KAAL,CAAWK,YAAX,CAAwBc,IAH5B;AAMAH,MAAAA,QAAQ,CAACE,MAAT,CACI,UADJ,EAEI,KAAKlB,KAAL,CAAWS,YAAX,CAAwB,KAAKT,KAAL,CAAWY,WAAnC,EAAgDQ,IAFpD;AAKAJ,MAAAA,QAAQ,CAACE,MAAT,CACI,aADJ,EAEI,KAAKlB,KAAL,CAAWc,WAFf,EAhBa,CAqBb;AACA;;AACA9B,MAAAA,KAAK,CAACqC,IAAN,CAAW,KAAKrB,KAAL,CAAWC,MAAX,GAAoB,SAA/B,EAA0Ce,QAA1C;AACH,KAnIkB;;AAAA,SAqInBM,QArImB,GAqIR,MAAM;AACb;AACA,UAAI,KAAKtB,KAAL,CAAWK,YAAf,EAA6B;AACzB,4BACI;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA,oCAAoC,KAAKL,KAAL,CAAWK,YAAX,CAAwBc,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH;AACJ,KA5IkB;;AAAA,SA8InBI,aA9ImB,GA8IH,MAAM;AAClB;AACA,0BACI;AAAA,+BACI;AAAO,UAAA,SAAS,EAAC,yDAAjB;AAAA,iCACI;AAAA,sBACK,KAAKvB,KAAL,CAAWwB;AADhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,uBADJ;AASH,KAzJkB;;AAIftC,IAAAA,MAAM,CAACuC,MAAP,GAJe,CAMf;;AACA,SAAKzB,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,YAAYyB,OAAO,CAACC,GAAR,CAAYC,yBAAxB,GAAoD,GAApD,GAA0DF,OAAO,CAACC,GAAR,CAAYE,yBADrE;AAETC,MAAAA,aAAa,EAAE,EAFN;AAGTlB,MAAAA,WAAW,EAAE,CAHJ;AAITH,MAAAA,YAAY,EAAE,EAJL;AAKTJ,MAAAA,YAAY,EAAE,EALL;AAMTG,MAAAA,YAAY,EAAE,EANL;AAOTgB,MAAAA,QAAQ,EAAE;AAPD,KAAb;AAUA;AACR;AACA;AACA;AACA;AACA;AACK,GAxBuB,CA0BxB;;;AACAO,EAAAA,iBAAiB,GAAG;AAChB;AACA/C,IAAAA,KAAK,CAACgD,GAAN,CAAU,KAAKhC,KAAL,CAAWC,MAAX,GAAoB,eAA9B,EAA+CgC,IAA/C,CAAoDC,QAAQ,IAAI;AAC5D,YAAMhC,IAAI,GAAGgC,QAAQ,CAAChC,IAAT,CAAcA,IAA3B;AAEA,WAAKE,QAAL,CAAc;AAAEK,QAAAA,YAAY,EAAEP;AAAhB,OAAd;AACA,WAAKE,QAAL,CAAc;AAAEI,QAAAA,YAAY,EAAEN,IAAI,CAAC,KAAKF,KAAL,CAAWY,WAAZ,CAAJ,CAA6BD;AAA7C,OAAd;AAEA,YAAMmB,aAAa,GAAG,EAAtB;;AAEA,WAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGjC,IAAI,CAACkC,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC;AACAL,QAAAA,aAAa,CAACO,IAAd,eAAmB;AAAQ,UAAA,KAAK,EAAEF,CAAf;AAAA,oBAAmBjC,IAAI,CAACiC,CAAD,CAAJ,CAAQG;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAAnB;AACH;;AACD,WAAKlC,QAAL,CAAc;AAAE0B,QAAAA,aAAa,EAAEA;AAAjB,OAAd;AACH,KAbD,EAFgB,CAiBhB;;AACA9C,IAAAA,KAAK,CAACgD,GAAN,CAAU,KAAKhC,KAAL,CAAWC,MAAX,GAAoB,WAA9B,EAA2CgC,IAA3C,CAAgDC,QAAQ,IAAI;AACxD,YAAMhC,IAAI,GAAGgC,QAAQ,CAAChC,IAAT,CAAcA,IAA3B;AAEA,YAAMqC,IAAI,GAAG,EAAb;;AAEA,WAAI,IAAIJ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGjC,IAAI,CAACkC,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjCI,QAAAA,IAAI,CAACF,IAAL,eAAU;AAAA,kCACF;AAAA,sBAAKnC,IAAI,CAACiC,CAAD,CAAJ,CAAQhB;AAAb;AAAA;AAAA;AAAA;AAAA,kBADE,eAEF;AAAA,sBAAKjB,IAAI,CAACiC,CAAD,CAAJ,CAAQrB;AAAb;AAAA;AAAA;AAAA;AAAA,kBAFE,eAGF;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA,mCACI;AAAQ,cAAA,SAAS,EAAC,uBAAlB;AAA0C,cAAA,OAAO,EAAE,KAAKxB,aAAxD;AAAuE,yBAASY,IAAI,CAACiC,CAAD,CAAJ,CAAQK,GAAxF;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAHE;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAV;AAUH;;AACD,WAAKpC,QAAL,CAAc;AAAEoB,QAAAA,QAAQ,EAAEe;AAAZ,OAAd;AACH,KAlBD;AAmBH;;AA4FDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEC,IAAV;AAAgB,YAAA,SAAS,EAAC,UAA1B;AAAqC,YAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAK,UAAA,EAAE,EAAC,MAAR;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,kCAAjB;AAAA,mCACI;AAAA,sCACI;AAAA,wCACI;AAAI,kBAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,yCAAI;AAAO,oBAAA,IAAI,EAAC,MAAZ;AAAmB,oBAAA,EAAE,EAAC,aAAtB;AAAoC,oBAAA,SAAS,EAAC,cAA9C;AAA6D,oBAAA,QAAQ,EAAE,KAAK7B,YAA5E;AAA0F,oBAAA,QAAQ;AAAlG;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAKI;AAAA,wCACI;AAAI,kBAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,yCACI;AAAQ,oBAAA,SAAS,EAAC,eAAlB;AAAkC,oBAAA,QAAQ,EAAE,KAAKN,YAAjD;AAA+D,oBAAA,KAAK,EAAE,KAAKP,KAAL,CAAWY,WAAjF;AAA8F,oBAAA,QAAQ,MAAtG;AAAA,8BACK,KAAKZ,KAAL,CAAW8B;AADhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,eAaI;AAAA,wCACI;AAAI,kBAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,0CACI;AAAO,oBAAA,IAAI,EAAC,MAAZ;AAAmB,oBAAA,SAAS,EAAC,cAA7B;AAA4C,oBAAA,QAAQ,EAAE,KAAK3B,YAA3D;AAAyE,oBAAA,QAAQ;AAAjF;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAO,oBAAA,SAAS,EAAC,sBAAjB;AAAA,8BAAyC,KAAKH,KAAL,CAAWQ;AAApD;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAwBI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,iBAAhC;AAAkD,YAAA,OAAO,EAAE,KAAKO,QAAhE;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBJ,EA2BK,KAAKO,QAAL,EA3BL,EA4BK,KAAKC,aAAL,EA5BL;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAwCH;;AArMuB;;AAwM5B,eAAepC,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nconst { Component } = require('react');\n\nconst axios = require('axios');\n\n // keep a util handy to dump objects\n const util = require('util');\n //console.log(util.inspect(error, {depth: null}))\n\n // grab our env variables\n const dotenv = require('dotenv');\n\n /*\nconsole.log('--------------------------------------');\nconsole.log(util.inspect(process.env, {depth: null}))\nconsole.log('--------------------------------------');\n*/\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        // grab our environemtn vars\n        dotenv.config();\n    \n        // set \"the state\" (great old school show, btw)\n        this.state = {\n            apiUrl: 'http://' + process.env.REACT_APP_UPLOAD_API_HOST + ':' + process.env.REACT_APP_UPLOAD_API_PORT,\n            selectOptions: [],\n            selectValue: 0,\n            fileTypeInfo: [],\n            selectedFile: '',\n            fileTypeHelp: '',\n            fileRows: []\n        };\n\n        /*\n        this.onFileChange = this.onFileChange.bind(this);\n        this.onTypeChange = this.onTypeChange.bind(this);\n        this.onDescChange = this.onDescChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        */\n    }\n\n    // could use to break some of this out into functions\n    componentDidMount() {  \n        // grab our file type info and build the select options\n        axios.get(this.state.apiUrl + '/getFileTypes').then(response => {\n            const data = response.data.data;\n\n            this.setState({ fileTypeInfo: data });\n            this.setState({ fileTypeHelp: data[this.state.selectValue].help });\n            \n            const selectOptions = [];\n\n            for(let i = 0; i < data.length; i++) {\n                //console.log(i)\n                selectOptions.push(<option value={i}>{data[i].text}</option>);\n            } \n            this.setState({ selectOptions: selectOptions });\n        });\n\n        // grab list of files and build a table\n        axios.get(this.state.apiUrl + '/getFiles').then(response => {\n            const data = response.data.data;\n\n            const rows = []\n\n            for(let i = 0; i < data.length; i++) {\n                rows.push(<tr>\n                        <td>{data[i].name}</td>\n                        <td>{data[i].description}</td>\n                        <td className='Delete-Column'>\n                            <button className='btn btn-danger btn-sm' onClick={this.onDeleteClick} data-id={data[i]._id}>\n                                <span></span> Delete\n                            </button>\n                        </td>\n                    </tr>\n                );\n            } \n            this.setState({ fileRows: rows });\n        });\n    }\n\n    onDeleteClick = event => {\n        console.log(event.target.dataset.id);\n        // set up some headers\n        const options = {\n            headers: {'Content-Type': 'application/json; charset=utf-8'}\n        };\n\n        // nuke the file from S3 and the database using query strings\n        //axios.delete(this.state.apiUrl + '/delete?fileId=' + event.target.dataset.id, options);\n\n        // nuke the file from S3 and the database using JSON in body\n        axios.delete(\n            this.state.apiUrl + '/delete', {\n                headers: {\n                    'Content-Type': 'application/json; charset=utf-8'\n                },\n                data: {\n                    'fileId': event.target.dataset.id\n                }\n        });\n    }\n  \n    // On file select (from the pop up)\n    onFileChange = event => {\n        // Update the state\n        this.setState({ selectedFile: event.target.files[0] });\n    };\n\n    // On file type select\n    onTypeChange = event => {\n        // Update the state\n        this.setState({ fileTypeHelp: this.state.fileTypeInfo[event.target.value].help });\n        this.setState({ selectValue: event.target.value });\n    };\n\n    // On description change\n    onDescChange = event => {\n        // Update the state\n        this.setState({ description: event.target.value });\n    };\n  \n    // On file upload (click the upload button)\n    onSubmit = () => {\n        // Create an object of formData\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"file\",\n            this.state.selectedFile,\n            this.state.selectedFile.name\n        );\n\n        formData.append(\n            \"fileType\",\n            this.state.fileTypeInfo[this.state.selectValue].type\n        );\n\n        formData.append(\n            \"description\",\n            this.state.description\n        );\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(this.state.apiUrl + '/upload', formData);\n    };\n  \n    fileData = () => {\n        //console.log(this.state.selectedFile);\n        if (this.state.selectedFile) {\n            return (\n                <p className='m-t-10px'>File Name: {this.state.selectedFile.name}</p>\n            );\n        } \n    };\n\n    getFilesTable = () => {\n        //console.log(this.state.selectedFile);\n        return (\n            <>\n                <table className='table table-hover table-bordered table-striped m-t-15px'>\n                    <tbody>\n                        {this.state.fileRows}\n                    </tbody>\n                </table>\n            </>\n        );\n    }\n  \n    render() {\n        return (\n            <>\n                <div className='App'>\n                    <header className='App-header'>\n                        <img src={logo} className='App-logo' alt='logo' />\n                        <h3>File Upload using React!</h3>\n                    </header>\n                    <div id='Main'>\n                        <table className='table table-hover table-bordered'>\n                            <tbody>\n                                <tr>\n                                    <td className='w-15-pct'>Description</td>\n                                    <td><input type='text' id='description' className='form-control' onChange={this.onDescChange} required /></td>\n                                </tr>\n                                <tr>\n                                    <td className='w-15-pct'>Type</td>\n                                    <td>\n                                        <select className='Left m-l-10px' onChange={this.onTypeChange} value={this.state.selectValue} required>\n                                            {this.state.selectOptions}\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className='w-15-pct'>Image</td>\n                                    <td>\n                                        <input type='file' className='form-control' onChange={this.onFileChange} required />\n                                        <small className='form-text text-muted'>{this.state.fileTypeHelp}</small>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <button type='button' className='btn btn-primary' onClick={this.onSubmit}>\n                            <span></span> Upload File\n                        </button>\n                        {this.fileData()}\n                        {this.getFilesTable()}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}