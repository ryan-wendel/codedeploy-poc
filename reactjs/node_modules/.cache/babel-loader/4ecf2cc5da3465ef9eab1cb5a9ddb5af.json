{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _classCallCheck from\"/data/node/reactjs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/data/node/reactjs/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/data/node/reactjs/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/data/node/reactjs/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/data/node/reactjs/node_modules/@babel/runtime/helpers/esm/createSuper\";import logo from\"./logo.svg\";import'./App.css';var _require=require('react'),Component=_require.Component;var axios=require('axios');// keep a util handy to dump objects\nvar util=require('util');//console.log(util.inspect(error, {depth: null}))\n// grab our env variables\nvar dotenv=require('dotenv');var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);// grab our environment vars\n_this.onDeleteClick=function(id,event){/*\n        // set up some headers\n        const options = {\n            headers: {'Content-Type': 'application/json; charset=utf-8'}\n        };\n\n        // nuke the file from S3 and the database using query strings\n        //axios.delete(this.state.apiUrl + '/deleteFile?id=' + event.target.dataset.id, options);\n        axios.delete(this.state.apiUrl + '/deleteFile?id=' + id, options);\n        */ // nuke the file from S3 and the database using JSON in body\naxios.delete(_this.state.apiUrl+'/deleteFile',{headers:{'Content-Type':'application/json; charset=utf-8'},data:{'id':id}}).then(function(response){_this.setState({statusElement:/*#__PURE__*/_jsx(\"div\",{id:\"Status\",className:\"alert alert-success\",children:response.data.message})});// refresh the files table\n_this.setFilesTable();}).catch(function(response){if(!response.data){_this.setState({statusElement:/*#__PURE__*/_jsx(\"div\",{id:\"Status\",className:\"alert alert-danger\",children:\"Problem accessing back-end\"})});}else{_this.setState({statusElement:/*#__PURE__*/_jsx(\"div\",{id:\"Status\",className:\"alert alert-danger\",children:response.data.message})});}});};_this.onDownloadClick=function(id,event){//axios.get(this.state.apiUrl + '/getUrl?id=' + event.target.dataset.id).then(response => {\naxios.get(_this.state.apiUrl+'/getUrl?id='+id).then(function(response){window.open(response.data.url,'_blank','noopener,noreferrer');}).catch(function(response){if(!response.data){_this.setState({statusElement:/*#__PURE__*/_jsx(\"div\",{id:\"Status\",className:\"alert alert-danger\",children:\"Problem accessing back-end\"})});}else{_this.setState({statusElement:/*#__PURE__*/_jsx(\"div\",{id:\"Status\",className:\"alert alert-danger\",children:response.data.message})});}});};_this.onFileChange=function(event){// Update the state\n_this.setState({selectedFile:event.target.files[0]});};_this.onTypeChange=function(event){// Update the state\n_this.setState({fileTypeHelp:_this.state.fileTypeInfo[event.target.value].help});_this.setState({fileTypeSelectOptionsValue:event.target.value});};_this.onDescChange=function(event){// Update the state\n_this.setState({description:event.target.value});};_this.onSubmit=function(event){// Was the fileTypeInfo state populated?\nif(!_this.state.fileTypeInfo[_this.state.fileTypeSelectOptionsValue]){_this.setState({statusElement:/*#__PURE__*/_jsx(\"div\",{id:\"Status\",className:\"alert alert-danger\",children:\"Missing file type info\"})});return;}// was a file selected?\nif(!_this.state.selectedFile.name){_this.setState({statusElement:/*#__PURE__*/_jsx(\"div\",{id:\"Status\",className:\"alert alert-danger\",children:\"Please select a file to upload\"})});return;}// Create a formData object to help transmit our file\nvar formData=new FormData();// Append the file to the formData object\nformData.append(\"file\",_this.state.selectedFile,_this.state.selectedFile.name);// append the file type to the formData object\nformData.append(\"fileType\",_this.state.fileTypeInfo[_this.state.fileTypeSelectOptionsValue].type);// append the file description to the formData object\nformData.append(\"description\",_this.state.description);// Make the request to the backend api\naxios.post(_this.state.apiUrl+'/uploadFile',formData).then(function(response){_this.setState({statusElement:/*#__PURE__*/_jsx(\"div\",{id:\"Status\",className:\"alert alert-success\",children:response.data.message})});// refresh the files table\n_this.setFilesTable();}).catch(function(response){if(!response.response){_this.setState({statusElement:/*#__PURE__*/_jsx(\"div\",{id:\"Status\",className:\"alert alert-danger\",children:\"Problem accessing back-end\"})});}else{_this.setState({statusElement:/*#__PURE__*/_jsx(\"div\",{id:\"Status\",className:\"alert alert-danger\",children:response.response.data.message})});}});};_this.getfileTypeSelectOptions=function(){var data=_this.state.fileTypeInfo;var selectOptions=[];for(var i=0;i<data.length;i++){selectOptions.push(/*#__PURE__*/_jsx(\"option\",{value:i,children:data[i].text},i));}return selectOptions;};_this.getfileData=function(){if(_this.state.selectedFile){return/*#__PURE__*/_jsxs(\"p\",{className:\"m-t-10px\",children:[\"File Name: \",_this.state.selectedFile.name]});}};_this.setFilesTable=function(){// grab list of files and build a table\naxios.get(_this.state.apiUrl+'/getFiles').then(function(response){var data=response.data.data;var tableRows=[];for(var i=0;i<data.length;i++){tableRows.push(/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:data[i].name}),/*#__PURE__*/_jsx(\"td\",{children:data[i].description}),/*#__PURE__*/_jsx(\"td\",{className:\"Download-Column\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-success btn-sm\",onClick:_this.onDownloadClick.bind(_assertThisInitialized(_this),data[i]._id),children:[/*#__PURE__*/_jsx(\"span\",{}),\" Download\"]})}),/*#__PURE__*/_jsx(\"td\",{className:\"Delete-Column\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-danger btn-sm\",onClick:_this.onDeleteClick.bind(_assertThisInitialized(_this),data[i]._id),children:[/*#__PURE__*/_jsx(\"span\",{}),\" Delete\"]})})]},i));}var fileTable=/*#__PURE__*/_jsx(\"table\",{className:\"table table-hover table-bordered table-striped m-t-15px\",children:/*#__PURE__*/_jsx(\"tbody\",{children:tableRows})});_this.setState({fileTable:fileTable});}).catch(function(response){if(!response.data){_this.setState({statusElement:/*#__PURE__*/_jsx(\"div\",{id:\"Status\",className:\"alert alert-danger\",children:\"Problem accessing back-end\"})});}else{_this.setState({statusElement:/*#__PURE__*/_jsx(\"div\",{id:\"Status\",className:\"alert alert-danger\",children:response.data.message})});}});};dotenv.config();// set \"the state\" (great old school show, btw)\n_this.state={apiUrl:'http://'+process.env.REACT_APP_UPLOAD_API_HOST+':'+process.env.REACT_APP_UPLOAD_API_PORT,fileTypeSelectOptions:[],fileTypeSelectOptionsValue:0,fileTypeInfo:[],selectedFile:'',fileTypeHelp:'',fileTable:[],statusElement:'',uploadTable:[]};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;// grab our file type info \naxios.get(this.state.apiUrl+'/getFileTypes').then(function(response){var data=response.data.data;_this2.setState({fileTypeInfo:data});_this2.setState({fileTypeHelp:data[_this2.state.fileTypeSelectOptionsValue].help});}).catch(function(response){if(!response.data){_this2.setState({statusElement:/*#__PURE__*/_jsx(\"div\",{id:\"Status\",className:\"alert alert-danger\",children:\"Problem accessing back-end\"})});}else{_this2.setState({statusElement:/*#__PURE__*/_jsx(\"div\",{id:\"Status\",className:\"alert alert-danger\",children:response.data.message})});}});// grab list of files and build our table\nthis.setFilesTable();}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",children:/*#__PURE__*/_jsx(\"img\",{src:logo,className:\"App-logo\",alt:\"logo\"})}),/*#__PURE__*/_jsxs(\"div\",{id:\"Main\",children:[this.state.statusElement,/*#__PURE__*/_jsx(\"table\",{className:\"table table-hover table-bordered\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"w-15-pct\",children:\"Description\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",onChange:this.onDescChange.bind(this),required:true})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"w-15-pct\",children:\"Type\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"select\",{className:\"Left m-l-10px\",onChange:this.onTypeChange.bind(this),value:this.state.fileTypeSelectOptionsValue,required:true,children:this.getfileTypeSelectOptions()})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"w-15-pct\",children:\"Image\"}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",className:\"form-control\",onChange:this.onFileChange.bind(this),required:true}),/*#__PURE__*/_jsx(\"small\",{className:\"form-text text-muted\",children:this.state.fileTypeHelp})]})]})]})}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn btn-primary\",onClick:this.onSubmit.bind(this),children:[/*#__PURE__*/_jsx(\"span\",{}),\" Upload File\"]}),this.getfileData(),this.state.fileTable]})]})});}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/data/node/reactjs/src/App.js"],"names":["require","Component","axios","util","dotenv","App","props","onDeleteClick","id","event","delete","state","apiUrl","headers","data","then","response","setState","statusElement","message","setFilesTable","catch","onDownloadClick","get","window","open","url","onFileChange","selectedFile","target","files","onTypeChange","fileTypeHelp","fileTypeInfo","value","help","fileTypeSelectOptionsValue","onDescChange","description","onSubmit","name","formData","FormData","append","type","post","getfileTypeSelectOptions","selectOptions","i","length","push","text","getfileData","tableRows","bind","_id","fileTable","config","process","env","REACT_APP_UPLOAD_API_HOST","REACT_APP_UPLOAD_API_PORT","fileTypeSelectOptions","uploadTable","logo"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nconst { Component } = require('react');\n\nconst axios = require('axios');\n\n // keep a util handy to dump objects\n const util = require('util');\n //console.log(util.inspect(error, {depth: null}))\n\n // grab our env variables\n const dotenv = require('dotenv');\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        // grab our environment vars\n        dotenv.config();\n    \n        // set \"the state\" (great old school show, btw)\n        this.state = {\n            apiUrl: 'http://' + process.env.REACT_APP_UPLOAD_API_HOST + ':' + process.env.REACT_APP_UPLOAD_API_PORT,\n            fileTypeSelectOptions: [],\n            fileTypeSelectOptionsValue: 0,\n            fileTypeInfo: [],\n            selectedFile: '',\n            fileTypeHelp: '',\n            fileTable: [],\n            statusElement: '',\n            uploadTable: []\n        };\n    }\n\n    componentDidMount() {  \n        // grab our file type info \n        axios.get(this.state.apiUrl + '/getFileTypes').then(response => {\n            const data = response.data.data;\n            this.setState({ fileTypeInfo: data });\n            this.setState({ fileTypeHelp: data[this.state.fileTypeSelectOptionsValue].help });\n        }).catch(response => {\n            if(!response.data) {\n                this.setState({ statusElement: <div id='Status' className='alert alert-danger'>Problem accessing back-end</div>});\n            } else {\n                this.setState({ statusElement: <div id='Status' className='alert alert-danger'>{response.data.message}</div>});\n            }\n        });\n\n        // grab list of files and build our table\n        this.setFilesTable();\n    }\n\n    onDeleteClick = (id, event) => {\n        /*\n        // set up some headers\n        const options = {\n            headers: {'Content-Type': 'application/json; charset=utf-8'}\n        };\n\n        // nuke the file from S3 and the database using query strings\n        //axios.delete(this.state.apiUrl + '/deleteFile?id=' + event.target.dataset.id, options);\n        axios.delete(this.state.apiUrl + '/deleteFile?id=' + id, options);\n        */\n\n        // nuke the file from S3 and the database using JSON in body\n        axios.delete(\n            this.state.apiUrl + '/deleteFile', {\n                headers: {\n                    'Content-Type': 'application/json; charset=utf-8'\n                },\n                data: {\n                    'id': id\n                }\n        }).then(response => {\n            this.setState({ statusElement: <div id='Status' className='alert alert-success'>{response.data.message}</div>});\n\n            // refresh the files table\n            this.setFilesTable();\n        }).catch(response => {\n            if(!response.data) {\n                this.setState({ statusElement: <div id='Status' className='alert alert-danger'>Problem accessing back-end</div>});\n            } else {\n                this.setState({ statusElement: <div id='Status' className='alert alert-danger'>{response.data.message}</div>});\n            }\n        });\n    }\n\n    onDownloadClick = (id, event) => {\n        //axios.get(this.state.apiUrl + '/getUrl?id=' + event.target.dataset.id).then(response => {\n        axios.get(this.state.apiUrl + '/getUrl?id=' + id).then(response => {\n            window.open(response.data.url, '_blank', 'noopener,noreferrer')\n        }).catch(response => {\n            if(!response.data) {\n                this.setState({ statusElement: <div id='Status' className='alert alert-danger'>Problem accessing back-end</div>});\n            } else {\n                this.setState({ statusElement: <div id='Status' className='alert alert-danger'>{response.data.message}</div>});\n            }\n        });\n    }\n  \n    // On file select (from the pop up)\n    onFileChange = event => {\n        // Update the state\n        this.setState({ selectedFile: event.target.files[0] });\n    };\n\n    // On file type select\n    onTypeChange = event => {\n        // Update the state\n        this.setState({ fileTypeHelp: this.state.fileTypeInfo[event.target.value].help });\n        this.setState({ fileTypeSelectOptionsValue: event.target.value });\n    };\n\n    // On description change\n    onDescChange = event => {\n        // Update the state\n        this.setState({ description: event.target.value });\n    };\n  \n    // On file upload (click the upload button)\n    onSubmit = event => {\n        // Was the fileTypeInfo state populated?\n        if(!this.state.fileTypeInfo[this.state.fileTypeSelectOptionsValue]) {\n            this.setState({ statusElement: <div id='Status' className='alert alert-danger'>Missing file type info</div>});\n            return;\n        }\n\n        // was a file selected?\n        if(!this.state.selectedFile.name) {\n            this.setState({ statusElement: <div id='Status' className='alert alert-danger'>Please select a file to upload</div>});\n            return;\n        }\n\n        // Create a formData object to help transmit our file\n        const formData = new FormData();\n\n        // Append the file to the formData object\n        formData.append(\n            \"file\",\n            this.state.selectedFile,\n            this.state.selectedFile.name\n        );\n\n        // append the file type to the formData object\n        formData.append(\n            \"fileType\",\n            this.state.fileTypeInfo[this.state.fileTypeSelectOptionsValue].type\n        );\n\n        // append the file description to the formData object\n        formData.append(\n            \"description\",\n            this.state.description\n        );\n\n\t    // Make the request to the backend api\n        axios.post(this.state.apiUrl + '/uploadFile', formData).then(response => {\n            this.setState({ statusElement: <div id='Status' className='alert alert-success'>{response.data.message}</div>});\n\n            // refresh the files table\n            this.setFilesTable();\n        }).catch(response => {\n            if(!response.response) {\n                this.setState({ statusElement: <div id='Status' className='alert alert-danger'>Problem accessing back-end</div>});\n            } else {\n                this.setState({ statusElement: <div id='Status' className='alert alert-danger'>{response.response.data.message}</div>});\n            }\n        });\n    };\n\n    getfileTypeSelectOptions = () => {\n        const data = this.state.fileTypeInfo;\n\n        const selectOptions = [];\n\n        for(let i = 0; i < data.length; i++) {\n            selectOptions.push(<option value={i} key={i}>{data[i].text}</option>);\n        } \n        return selectOptions;\n    }\n  \n    getfileData = () => {\n        if (this.state.selectedFile) {\n            return (\n                <p className='m-t-10px'>File Name: {this.state.selectedFile.name}</p>\n            );\n        } \n    };\n\n    setFilesTable = () => {\n        // grab list of files and build a table\n        axios.get(this.state.apiUrl + '/getFiles').then(response => {\n            const data = response.data.data;\n            const tableRows = [];\n\n            for(let i = 0; i < data.length; i++) {\n                tableRows.push(<tr key={i}>\n                        <td>{data[i].name}</td>\n                        <td>{data[i].description}</td>\n                        <td className='Download-Column'>\n                            <button className='btn btn-success btn-sm' onClick={this.onDownloadClick.bind(this, data[i]._id)}>\n                                <span></span> Download\n                            </button>\n                        </td>\n                        <td className='Delete-Column'>\n                            <button className='btn btn-danger btn-sm' onClick={this.onDeleteClick.bind(this, data[i]._id)}>\n                                <span></span> Delete\n                            </button>\n                        </td>\n                    </tr>\n                );\n            }  \n\n            const fileTable = <table className='table table-hover table-bordered table-striped m-t-15px'>\n                <tbody>\n                    {tableRows}\n                </tbody>\n            </table>;\n\n            this.setState({ fileTable: fileTable });\n        }).catch(response => {\n            if(!response.data) {\n                this.setState({ statusElement: <div id='Status' className='alert alert-danger'>Problem accessing back-end</div>});\n            } else {\n                this.setState({ statusElement: <div id='Status' className='alert alert-danger'>{response.data.message}</div>});\n            }\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <div className='App'>\n                    <header className='App-header'>\n                        <img src={logo} className='App-logo' alt='logo' />\n                    </header>\n                    <div id='Main'>\n                        {this.state.statusElement}\n                        <table className='table table-hover table-bordered'>\n                            <tbody>\n                                <tr>\n                                    <td className='w-15-pct'>Description</td>\n                                    <td><input type='text' className='form-control' onChange={this.onDescChange.bind(this)} required /></td>\n                                </tr>\n                                <tr>\n                                    <td className='w-15-pct'>Type</td>\n                                    <td>\n                                        <select className='Left m-l-10px' onChange={this.onTypeChange.bind(this)} value={this.state.fileTypeSelectOptionsValue} required>\n                                            {this.getfileTypeSelectOptions()}\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className='w-15-pct'>Image</td>\n                                    <td>\n                                        <input type='file' className='form-control' onChange={this.onFileChange.bind(this)} required />\n                                        <small className='form-text text-muted'>{this.state.fileTypeHelp}</small>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <button type='button' className='btn btn-primary' onClick={this.onSubmit.bind(this)}>\n                            <span></span> Upload File\n                        </button>\n                        {this.getfileData()}\n                        {this.state.fileTable}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}