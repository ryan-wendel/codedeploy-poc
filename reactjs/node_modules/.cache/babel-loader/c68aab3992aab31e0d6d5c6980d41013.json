{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/data/node/reactjs/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst {\n  Component\n} = require('react');\n\nconst axios = require('axios'); // keep a util handy to dump objects\n\n\nconst util = require('util'); //console.log(util.inspect(error, {depth: null}))\n// grab our env variables\n\n\nconst dotenv = require('dotenv');\n/*\nconsole.log('--------------------------------------');\nconsole.log(util.inspect(process.env, {depth: null}))\nconsole.log('--------------------------------------');\n*/\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props); // grab our environemtn vars\n\n    this.onDeleteClick = event => {\n      /*\n      // set up some headers\n      const options = {\n          headers: {'Content-Type': 'application/json; charset=utf-8'}\n      };\n       // nuke the file from S3 and the database using query strings\n      axios.delete(this.state.apiUrl + '/delete?fileId=' + event.target.dataset.id, options);\n      */\n      // nuke the file from S3 and the database using JSON in body\n      axios.delete(this.state.apiUrl + '/delete', {\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8'\n        },\n        data: {\n          'fileId': event.target.dataset.id\n        }\n      }).then(response => {\n        //console.log(util.inspect(response, {depth: null}))\n        this.setState({\n          statusElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"Status\",\n            className: \"alert alert-success\",\n            children: response.data.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 44\n          }, this)\n        });\n        this.setFilesTable();\n      }).catch(response => {\n        console.log(util.inspect(response, {\n          depth: null\n        }));\n        this.setState({\n          statusElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"Status\",\n            className: \"alert alert-danger\",\n            children: response.data.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 44\n          }, this)\n        });\n      });\n    };\n\n    this.onFileChange = event => {\n      // Update the state\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onTypeChange = event => {\n      // Update the state\n      this.setState({\n        fileTypeHelp: this.state.fileTypeInfo[event.target.value].help\n      });\n      this.setState({\n        fileTypeSelectOptionsValue: event.target.value\n      });\n    };\n\n    this.onDescChange = event => {\n      // Update the state\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      if (!this.state.selectedFile.name) {\n        this.setState({\n          statusElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"Status\",\n            className: \"alert alert-danger\",\n            children: \"Please select a file to upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 44\n          }, this)\n        });\n        return;\n      } // Create an object of formData\n\n\n      const formData = new FormData(); // Update the formData object\n\n      formData.append(\"file\", this.state.selectedFile, this.state.selectedFile.name);\n      formData.append(\"fileType\", this.state.fileTypeInfo[this.state.fileTypeSelectOptionsValue].type);\n      formData.append(\"description\", this.state.description); // Request made to the backend api\n      // Send formData object\n\n      axios.post(this.state.apiUrl + '/upload', formData).then(response => {\n        //console.log(util.inspect(response, {depth: null}))\n        this.setState({\n          statusElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"Status\",\n            className: \"alert alert-success\",\n            children: response.data.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 44\n          }, this)\n        });\n        this.setState({\n          selectedFile: ''\n        });\n        this.setState({\n          description: ''\n        });\n        this.setFilesTable();\n      }).catch(response => {\n        //console.log(util.inspect(response, {depth: null}))\n        this.setState({\n          statusElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"Status\",\n            className: \"alert alert-danger\",\n            children: response.response.data.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 44\n          }, this)\n        }); //this.setUploadTable();\n      });\n    };\n\n    this.getfileTypeSelectOptions = () => {\n      const data = this.state.fileTypeInfo;\n      const selectOptions = [];\n\n      for (let i = 0; i < data.length; i++) {\n        //console.log(i)\n        selectOptions.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i,\n          children: data[i].text\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 32\n        }, this));\n      }\n\n      return selectOptions;\n    };\n\n    this.getfileData = () => {\n      //console.log(this.state.selectedFile);\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-t-10px\",\n          children: [\"File Name: \", this.state.selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.setFilesTable = () => {\n      // grab list of files and build a table\n      axios.get(this.state.apiUrl + '/getFiles').then(response => {\n        const data = response.data.data;\n        const tableRows = [];\n\n        for (let i = 0; i < data.length; i++) {\n          tableRows.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: data[i].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data[i].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"Delete-Column\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger btn-sm\",\n                onClick: this.onDeleteClick,\n                \"data-id\": data[i]._id,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 33\n                }, this), \" Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 32\n          }, this));\n        }\n\n        const fileTable = /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-hover table-bordered table-striped m-t-15px\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tableRows\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 31\n        }, this);\n\n        this.setState({\n          fileTable: fileTable\n        });\n      }).catch(response => {\n        this.setState({\n          statusElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"Status\",\n            className: \"alert alert-danger\",\n            children: response.data.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 44\n          }, this)\n        });\n      });\n    };\n\n    dotenv.config(); // set \"the state\" (great old school show, btw)\n\n    this.state = {\n      apiUrl: 'http://' + process.env.REACT_APP_UPLOAD_API_HOST + ':' + process.env.REACT_APP_UPLOAD_API_PORT,\n      fileTypeSelectOptions: [],\n      fileTypeSelectOptionsValue: 0,\n      fileTypeInfo: [],\n      selectedFile: '',\n      fileTypeHelp: '',\n      fileTable: [],\n      statusElement: '',\n      uploadTable: []\n    };\n    /*\n    this.onFileChange = this.onFileChange.bind(this);\n    this.onTypeChange = this.onTypeChange.bind(this);\n    this.onDescChange = this.onDescChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    */\n  }\n\n  componentDidMount() {\n    // grab our file type info \n    axios.get(this.state.apiUrl + '/getFileTypes').then(response => {\n      const data = response.data.data;\n      this.setState({\n        fileTypeInfo: data\n      });\n      this.setState({\n        fileTypeHelp: data[this.state.fileTypeSelectOptionsValue].help\n      });\n    }).catch(response => {\n      //console.log(util.inspect(response, {depth: null}))\n      this.setState({\n        statusElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"Status\",\n          className: \"alert alert-danger\",\n          children: response.data.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 44\n        }, this)\n      });\n    }); // grab list of files and build our table\n\n    this.setFilesTable();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App-header\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            className: \"App-logo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"Main\",\n          children: [this.state.statusElement, /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-hover table-bordered\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"w-15-pct\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    onChange: this.onDescChange,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"w-15-pct\",\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"Left m-l-10px\",\n                    onChange: this.onTypeChange,\n                    value: this.state.fileTypeSelectOptionsValue,\n                    required: true,\n                    children: this.getfileTypeSelectOptions()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"w-15-pct\",\n                  children: \"Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    className: \"form-control\",\n                    onChange: this.onFileChange,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"form-text text-muted\",\n                    children: this.state.fileTypeHelp\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: this.onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), \" Upload File\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), this.getfileData(), this.state.fileTable]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/data/node/reactjs/src/App.js"],"names":["Component","require","axios","util","dotenv","App","constructor","props","onDeleteClick","event","delete","state","apiUrl","headers","data","target","dataset","id","then","response","setState","statusElement","message","setFilesTable","catch","console","log","inspect","depth","onFileChange","selectedFile","files","onTypeChange","fileTypeHelp","fileTypeInfo","value","help","fileTypeSelectOptionsValue","onDescChange","description","onSubmit","name","formData","FormData","append","type","post","getfileTypeSelectOptions","selectOptions","i","length","push","text","getfileData","get","tableRows","_id","fileTable","config","process","env","REACT_APP_UPLOAD_API_HOST","REACT_APP_UPLOAD_API_PORT","fileTypeSelectOptions","uploadTable","componentDidMount","render","logo"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nconst { Component } = require('react');\n\nconst axios = require('axios');\n\n // keep a util handy to dump objects\n const util = require('util');\n //console.log(util.inspect(error, {depth: null}))\n\n // grab our env variables\n const dotenv = require('dotenv');\n\n /*\nconsole.log('--------------------------------------');\nconsole.log(util.inspect(process.env, {depth: null}))\nconsole.log('--------------------------------------');\n*/\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        // grab our environemtn vars\n        dotenv.config();\n    \n        // set \"the state\" (great old school show, btw)\n        this.state = {\n            apiUrl: 'http://' + process.env.REACT_APP_UPLOAD_API_HOST + ':' + process.env.REACT_APP_UPLOAD_API_PORT,\n            fileTypeSelectOptions: [],\n            fileTypeSelectOptionsValue: 0,\n            fileTypeInfo: [],\n            selectedFile: '',\n            fileTypeHelp: '',\n            fileTable: [],\n            statusElement: '',\n            uploadTable: []\n        };\n\n        /*\n        this.onFileChange = this.onFileChange.bind(this);\n        this.onTypeChange = this.onTypeChange.bind(this);\n        this.onDescChange = this.onDescChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        */\n    }\n\n    componentDidMount() {  \n        // grab our file type info \n        axios.get(this.state.apiUrl + '/getFileTypes').then(response => {\n            const data = response.data.data;\n            this.setState({ fileTypeInfo: data });\n            this.setState({ fileTypeHelp: data[this.state.fileTypeSelectOptionsValue].help });\n        }).catch(response => {\n            //console.log(util.inspect(response, {depth: null}))\n            this.setState({ statusElement: <div id='Status' className='alert alert-danger'>{response.data.message}</div>})\n        });\n\n        // grab list of files and build our table\n        this.setFilesTable();\n    }\n\n    onDeleteClick = event => {\n        /*\n        // set up some headers\n        const options = {\n            headers: {'Content-Type': 'application/json; charset=utf-8'}\n        };\n\n        // nuke the file from S3 and the database using query strings\n        axios.delete(this.state.apiUrl + '/delete?fileId=' + event.target.dataset.id, options);\n        */\n\n        // nuke the file from S3 and the database using JSON in body\n        axios.delete(\n            this.state.apiUrl + '/delete', {\n                headers: {\n                    'Content-Type': 'application/json; charset=utf-8'\n                },\n                data: {\n                    'fileId': event.target.dataset.id\n                }\n        }).then(response => {\n            //console.log(util.inspect(response, {depth: null}))\n            this.setState({ statusElement: <div id='Status' className='alert alert-success'>{response.data.message}</div>});\n            this.setFilesTable();\n        }).catch(response => {\n            console.log(util.inspect(response, {depth: null}))\n            this.setState({ statusElement: <div id='Status' className='alert alert-danger'>{response.data.message}</div>})\n        });\n    }\n  \n    // On file select (from the pop up)\n    onFileChange = event => {\n        // Update the state\n        this.setState({ selectedFile: event.target.files[0] });\n    };\n\n    // On file type select\n    onTypeChange = event => {\n        // Update the state\n        this.setState({ fileTypeHelp: this.state.fileTypeInfo[event.target.value].help });\n        this.setState({ fileTypeSelectOptionsValue: event.target.value });\n    };\n\n    // On description change\n    onDescChange = event => {\n        // Update the state\n        this.setState({ description: event.target.value });\n    };\n  \n    // On file upload (click the upload button)\n    onSubmit = () => {\n        if(!this.state.selectedFile.name) {\n            this.setState({ statusElement: <div id='Status' className='alert alert-danger'>Please select a file to upload</div>});\n            return;\n        }\n\n        // Create an object of formData\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"file\",\n            this.state.selectedFile,\n            this.state.selectedFile.name\n        );\n\n        formData.append(\n            \"fileType\",\n            this.state.fileTypeInfo[this.state.fileTypeSelectOptionsValue].type\n        );\n\n        formData.append(\n            \"description\",\n            this.state.description\n        );\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(this.state.apiUrl + '/upload', formData).then(response => {\n            //console.log(util.inspect(response, {depth: null}))\n            this.setState({ statusElement: <div id='Status' className='alert alert-success'>{response.data.message}</div>});\n            this.setState({ selectedFile: '' });\n            this.setState({ description: '' });\n            this.setFilesTable();\n        }).catch(response => {\n            //console.log(util.inspect(response, {depth: null}))\n            this.setState({ statusElement: <div id='Status' className='alert alert-danger'>{response.response.data.message}</div>});\n            //this.setUploadTable();\n        });\n    };\n\n    getfileTypeSelectOptions = () => {\n        const data = this.state.fileTypeInfo;\n\n        const selectOptions = [];\n\n        for(let i = 0; i < data.length; i++) {\n            //console.log(i)\n            selectOptions.push(<option value={i} key={i}>{data[i].text}</option>);\n        } \n\n        return selectOptions;\n    }\n  \n    getfileData = () => {\n        //console.log(this.state.selectedFile);\n        if (this.state.selectedFile) {\n            return (\n                <p className='m-t-10px'>File Name: {this.state.selectedFile.name}</p>\n            );\n        } \n    };\n\n    setFilesTable = () => {\n        // grab list of files and build a table\n        axios.get(this.state.apiUrl + '/getFiles').then(response => {\n            const data = response.data.data;\n            const tableRows = [];\n\n            for(let i = 0; i < data.length; i++) {\n                tableRows.push(<tr>\n                        <td>{data[i].name}</td>\n                        <td>{data[i].description}</td>\n                        <td className='Delete-Column'>\n                            <button className='btn btn-danger btn-sm' onClick={this.onDeleteClick} data-id={data[i]._id}>\n                                <span></span> Delete\n                            </button>\n                        </td>\n                    </tr>\n                );\n            }  \n\n            const fileTable = <table className='table table-hover table-bordered table-striped m-t-15px'>\n                <tbody>\n                    {tableRows}\n                </tbody>\n            </table>;\n\n            this.setState({ fileTable: fileTable });\n        }).catch(response => {\n            this.setState({ statusElement: <div id='Status' className='alert alert-danger'>{response.data.message}</div>})\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <div className='App'>\n                    <header className='App-header'>\n                        <img src={logo} className='App-logo' alt='logo' />\n                    </header>\n                    <div id='Main'>\n                        {this.state.statusElement}\n                        <table className='table table-hover table-bordered'>\n                            <tbody>\n                                <tr>\n                                    <td className='w-15-pct'>Description</td>\n                                    <td><input type='text' className='form-control' onChange={this.onDescChange} required /></td>\n                                </tr>\n                                <tr>\n                                    <td className='w-15-pct'>Type</td>\n                                    <td>\n                                        <select className='Left m-l-10px' onChange={this.onTypeChange} value={this.state.fileTypeSelectOptionsValue} required>\n                                            {this.getfileTypeSelectOptions()}\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className='w-15-pct'>Image</td>\n                                    <td>\n                                        <input type='file' className='form-control' onChange={this.onFileChange} required />\n                                        <small className='form-text text-muted'>{this.state.fileTypeHelp}</small>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <button type='button' className='btn btn-primary' onClick={this.onSubmit}>\n                            <span></span> Upload File\n                        </button>\n                        {this.getfileData()}\n                        {this.state.fileTable}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}