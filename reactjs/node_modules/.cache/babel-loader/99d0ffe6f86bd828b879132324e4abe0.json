{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/data/node/reactjs/src/App.js\";\nimport { Component } from 'react';\nimport axios from 'axios'; // grab our env variables\n\nimport dotenv from 'dotenv';\ndotenv.config();\nimport logo from \"./logo.svg\";\nimport './App.css'; // keep a util handy to dump objects\n\nconst util = require('util'); //console.log(util.inspect(error, {depth: null}))\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onFileChange = event => {\n      // Update the state\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onTypeChange = event => {\n      // Update the state\n      this.setState({\n        fileType: this.fileTypes[event.target.value].type\n      });\n      this.setState({\n        fileTypeHelp: this.fileTypes[event.target.value].help\n      });\n    };\n\n    this.onDescChange = event => {\n      // Update the state\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      // Create an object of formData\n      const formData = new FormData(); // Update the formData object\n\n      formData.append(\"file\", this.state.selectedFile, this.state.selectedFile.name);\n      formData.append(\"file_type\", this.state.fileType);\n      formData.append(\"description\", this.state.description); // Request made to the backend api\n      // Send formData object\n\n      axios.post(this.apiUrl + '/foo', formData); //axios.post(this.apiUrl + '/upload', formData);\n    };\n\n    this.fileData = () => {\n      //console.log(this.state.selectedFile);\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-t-10px\",\n          children: [\"File Name: \", this.state.selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.getSelectOptions = () => {\n      let i = 0;\n      return this.fileTypes.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: i++,\n        children: item.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this));\n    };\n\n    this.apiUrl = 'http://' + process.env.UPLOAD_API_HOST + ':' + process.env.UPLOAD_API_PORT;\n    /*\n    this.fileTypes = [{\n        type: \"book\",\n        text: \"Books\",\n        help: \"Books must be in PDF format. Max file size is 1MB.\"\n    }, {\n        type: \"image\",\n        text: \"Images\",\n        help: \"Images must be in JPG, JPEG, PNG, or GIF format. Max file size is 1MB.\"\n    }];\n    */\n\n    this.fileTypes = this.getFileTypeInfo();\n    console.log(this.apiUrl + '/getFileTypes'); // console.log(fileTypes);\n    // this.state = {\n    //     selectedFile: null,\n    //     fileType: this.fileTypes[0].type,\n    //     fileTypeHelp: this.fileTypes[0].help,\n    // };\n  } // grab the file type info\n\n\n  getFileTypeInfo() {\n    console.log('AAAAAAAAAA');\n    axios.get(this.apiUrl + '/getFileTypes').then(response => {\n      console.log(response.data);\n      return response.data;\n    });\n    return null;\n  } // On file select (from the pop up)\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            className: \"App-logo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"File Upload using React!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"UploadTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-hover table-bordered\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"w-15-pct\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"description\",\n                    className: \"form-control\",\n                    value: this.state.description,\n                    onChange: this.onDescChange,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"w-15-pct\",\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"Left m-l-10px\",\n                    onChange: this.onTypeChange,\n                    value: this.state.fileType,\n                    required: true,\n                    children: this.getSelectOptions()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"w-15-pct\",\n                  children: \"Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    className: \"form-control\",\n                    onChange: this.onFileChange,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"file-help\",\n                    className: \"form-text text-muted\",\n                    children: this.state.fileTypeHelp\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: this.onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), \" Upload File\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), this.fileData()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/data/node/reactjs/src/App.js"],"names":["Component","axios","dotenv","config","util","require","App","constructor","props","onFileChange","event","setState","selectedFile","target","files","onTypeChange","fileType","fileTypes","value","type","fileTypeHelp","help","onDescChange","description","onSubmit","formData","FormData","append","state","name","post","apiUrl","fileData","getSelectOptions","i","map","item","text","process","env","UPLOAD_API_HOST","UPLOAD_API_PORT","getFileTypeInfo","console","log","get","then","response","data","render","logo"],"mappings":"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","sourcesContent":["import {Component} from 'react';\nimport axios from 'axios';\n\n// grab our env variables\nimport dotenv from 'dotenv';\ndotenv.config();\n\nimport logo from './logo.svg';\nimport './App.css';\n\n // keep a util handy to dump objects\n const util = require('util');\n //console.log(util.inspect(error, {depth: null}))\n\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.apiUrl = 'http://' + process.env.UPLOAD_API_HOST + ':' + process.env.UPLOAD_API_PORT;\n\n        /*\n        this.fileTypes = [{\n            type: \"book\",\n            text: \"Books\",\n            help: \"Books must be in PDF format. Max file size is 1MB.\"\n        }, {\n            type: \"image\",\n            text: \"Images\",\n            help: \"Images must be in JPG, JPEG, PNG, or GIF format. Max file size is 1MB.\"\n        }];\n        */\n\n        this.fileTypes = this.getFileTypeInfo();\n\n        console.log(this.apiUrl + '/getFileTypes')\n\n        // console.log(fileTypes);\n\n        // this.state = {\n        //     selectedFile: null,\n        //     fileType: this.fileTypes[0].type,\n        //     fileTypeHelp: this.fileTypes[0].help,\n        // };\n    }\n\n    // grab the file type info\n    getFileTypeInfo() {\n        console.log('AAAAAAAAAA')\n        axios.get(this.apiUrl + '/getFileTypes').then(response => {\n            console.log(response.data);\n            return response.data;\n        });\n\n        return null;\n    }\n  \n    // On file select (from the pop up)\n    onFileChange = event => {\n        // Update the state\n        this.setState({ selectedFile: event.target.files[0] });\n    };\n\n    // On file type select\n    onTypeChange = event => {\n        // Update the state\n        this.setState({ fileType: this.fileTypes[event.target.value].type });\n        this.setState({ fileTypeHelp: this.fileTypes[event.target.value].help });\n    };\n\n    // On description change\n    onDescChange = event => {\n        // Update the state\n        this.setState({ description: event.target.value });\n    };\n  \n    // On file upload (click the upload button)\n    onSubmit = () => {\n        // Create an object of formData\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"file\",\n            this.state.selectedFile,\n            this.state.selectedFile.name\n        );\n\n        formData.append(\n            \"file_type\",\n            this.state.fileType\n        );\n\n        formData.append(\n            \"description\",\n            this.state.description\n        );\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(this.apiUrl + '/foo', formData);\n        //axios.post(this.apiUrl + '/upload', formData);\n    };\n  \n    fileData = () => {\n        //console.log(this.state.selectedFile);\n        if (this.state.selectedFile) {\n            return (\n                <p className='m-t-10px'>File Name: {this.state.selectedFile.name}</p>\n            );\n        } \n    };\n\n    getSelectOptions = () => {\n        let i = 0;\n        return (\n            this.fileTypes.map(item => (\n                <option value={i++}>{item.text}</option>\n            ))\n        );\n    }\n  \n    render() {\n        return (\n            <>\n                <div className='App'>\n                    <header className='App-header'>\n                        <img src={logo} className='App-logo' alt='logo' />\n                        <h3>File Upload using React!</h3>\n                    </header>\n                    <div id='UploadTable'>\n                        <table className='table table-hover table-bordered'>\n                            <tbody>\n                                <tr>\n                                    <td className='w-15-pct'>Description</td>\n                                    <td><input type='text' id='description' className='form-control' value={this.state.description} onChange={this.onDescChange} required /></td>\n                                </tr>\n                                <tr>\n                                    <td className='w-15-pct'>Type</td>\n                                    <td>\n                                        <select className='Left m-l-10px' onChange={this.onTypeChange} value={this.state.fileType} required>\n                                            {this.getSelectOptions()}\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className='w-15-pct'>Image</td>\n                                    <td>\n                                            <input type='file' className='form-control' onChange={this.onFileChange} required />\n                                            <small id='file-help' className='form-text text-muted'>{this.state.fileTypeHelp}</small>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <button type='button' className='btn btn-primary' onClick={this.onSubmit}>\n                            <span></span> Upload File\n                        </button>\n                        {this.fileData()}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}