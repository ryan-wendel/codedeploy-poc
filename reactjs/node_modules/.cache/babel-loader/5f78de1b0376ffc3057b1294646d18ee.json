{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/data/node/reactjs/src/App.js\";\nimport { Component } from 'react';\nimport axios from 'axios';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onFileChange = event => {\n      // Update the state\n      this.setState({\n        selectedFile: event.target.files[0]\n      }); //console.log(\"File: \" + this.state.selectedFile);\n    };\n\n    this.onFileTypeChange = event => {\n      console.log(\"Type 1: \" + event.target.value); // Update the state\n\n      this.setState({\n        selectedFileType: event.target.value\n      });\n      console.log(\"Type: \" + this.state.selectedFileType);\n    };\n\n    this.onFileUpload = () => {\n      // Create an object of formData\n      const formData = new FormData(); // Update the formData object\n\n      formData.append(\"file\", this.state.selectedFile, this.state.selectedFile.name);\n      formData.append(\"file_type\", this.state.selectedFileType); // Request made to the backend api\n      // Send formData object\n\n      axios.post(\"http://192.168.0.160:8000/foo\", formData);\n    };\n\n    this.fileData = () => {\n      console.log(this.state.selectedFile);\n\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.getSelectOptions = () => {\n      //const fileTypes = this.state.fileTypes;\n      return this.fileTypes.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.type,\n        children: item.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this));\n    };\n\n    this.fileTypes = [{\n      type: \"book\",\n      text: \"Books\"\n    }, {\n      type: \"image\",\n      text: \"Images\"\n    }];\n    this.state = {\n      selectedFile: null,\n      selectedFileType: this.fileTypes[0].type\n    };\n  } // On file select (from the pop up)\n\n\n  render() {\n    // build the upload button\n    let upLoadButton;\n\n    if (this.state.selectedFile) {\n      upLoadButton = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Left m-l-20px\",\n        onClick: this.onFileUpload,\n        children: \"Upload!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 28\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App-header\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            className: \"App-logo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"File Upload using React!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Left\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: this.onFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), upLoadButton]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Left\",\n          children: [\"File Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"Left m-l-10px\",\n            onChange: this.onFileTypeChange,\n            value: this.state.selectedFileType,\n            children: this.getSelectOptions()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), this.fileData()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/data/node/reactjs/src/App.js"],"names":["Component","axios","App","constructor","props","onFileChange","event","setState","selectedFile","target","files","onFileTypeChange","console","log","value","selectedFileType","state","onFileUpload","formData","FormData","append","name","post","fileData","getSelectOptions","fileTypes","map","item","type","text","render","upLoadButton","logo"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport axios from 'axios';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.fileTypes = [{\n            type: \"book\",\n            text: \"Books\"\n        }, {\n            type: \"image\",\n            text: \"Images\"\n        }];\n\n        this.state = {\n            selectedFile: null,\n            selectedFileType: this.fileTypes[0].type\n        }\n    }\n  \n    // On file select (from the pop up)\n    onFileChange = event => {\n        // Update the state\n        this.setState({ selectedFile: event.target.files[0] });\n\n        //console.log(\"File: \" + this.state.selectedFile);\n    };\n\n    // On file type select\n    onFileTypeChange = event => {\n        console.log(\"Type 1: \" + event.target.value);\n        // Update the state\n        this.setState({ selectedFileType: event.target.value });\n\n        console.log(\"Type: \" + this.state.selectedFileType);\n    };\n  \n    // On file upload (click the upload button)\n    onFileUpload = () => {\n        // Create an object of formData\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"file\",\n            this.state.selectedFile,\n            this.state.selectedFile.name\n        );\n\n        formData.append(\n            \"file_type\",\n            this.state.selectedFileType\n        );\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(\"http://192.168.0.160:8000/foo\", formData);\n    };\n  \n    // File content to be displayed after\n    // file upload is complete\n    fileData = () => {\n        console.log(this.state.selectedFile);\n        if (this.state.selectedFile) {\n            return (\n                <div>\n                    <p>File Name: {this.state.selectedFile.name}</p>\n                </div>\n            );\n        } \n    };\n\n    getSelectOptions = () => {\n        //const fileTypes = this.state.fileTypes;\n        return (\n            this.fileTypes.map(item => (\n                <option value={item.type}>{item.text}</option>\n            ))\n        );\n    }\n  \n    render() {\n        // build the upload button\n        let upLoadButton;\n        if(this.state.selectedFile) {\n            upLoadButton = <button className=\"Left m-l-20px\" onClick={this.onFileUpload}>Upload!</button>;\n        }\n\n        return (\n            <>\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    </header>\n                    <h3>File Upload using React!</h3>\n                    <p className=\"Left\">\n                        <input type=\"file\" onChange={this.onFileChange} />\n                        {upLoadButton}\n                    </p>\n                    <p className=\"Left\">File Type: \n                        <select className=\"Left m-l-10px\" onChange={this.onFileTypeChange} value={this.state.selectedFileType}>\n                            {this.getSelectOptions()}\n                        </select>\n                    </p>\n                    {this.fileData()}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}