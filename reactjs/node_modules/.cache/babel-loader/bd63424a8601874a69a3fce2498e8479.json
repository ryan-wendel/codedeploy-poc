{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/data/node/reactjs/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst {\n  Component\n} = require('react');\n\nconst axios = require('axios'); // keep a util handy to dump objects\n\n\nconst util = require('util'); //console.log(util.inspect(error, {depth: null}))\n// grab our env variables\n\n\nconst dotenv = require('dotenv');\n/*\nconsole.log('--------------------------------------');\nconsole.log(util.inspect(process.env, {depth: null}))\nconsole.log('--------------------------------------');\n*/\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props); // grab our environemtn vars\n\n    this.buildSelectOptions = () => {\n      const selectOptions = []; // grab our file type info\n\n      const data = this.state.fileTypeInfo;\n\n      for (let i = 0; i < data.length; i++) {\n        //console.log(i)\n        selectOptions.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i,\n          children: data[i].text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 32\n        }, this));\n      }\n\n      this.setState({\n        selectOptions: selectOptions\n      });\n    };\n\n    this.buildFileTable = () => {\n      // grab list of files and build a table\n      axios.get(this.state.apiUrl + '/getFiles').then(response => {\n        const data = response.data.data;\n        const rows = [];\n\n        for (let i = 0; i < data.length; i++) {\n          rows.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: data[i].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data[i].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"Delete-Column\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger btn-sm\",\n                onClick: this.onDeleteClick,\n                \"data-id\": data[i]._id,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 33\n                }, this), \" Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 27\n          }, this));\n        }\n\n        this.setState({\n          fileRows: rows\n        });\n      });\n    };\n\n    this.onDeleteClick = event => {\n      /*\n      // set up some headers\n      const options = {\n          headers: {'Content-Type': 'application/json; charset=utf-8'}\n      };\n       // nuke the file from S3 and the database using query strings\n      axios.delete(this.state.apiUrl + '/delete?fileId=' + event.target.dataset.id, options);\n      */\n      // nuke the file from S3 and the database using JSON in body\n      axios.delete(this.state.apiUrl + '/delete', {\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8'\n        },\n        data: {\n          'fileId': event.target.dataset.id\n        }\n      });\n    };\n\n    this.onFileChange = event => {\n      // Update the state\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onTypeChange = event => {\n      // Update the state\n      this.setState({\n        fileTypeHelp: this.state.fileTypeInfo[event.target.value].help\n      });\n      this.setState({\n        selectValue: event.target.value\n      });\n    };\n\n    this.onDescChange = event => {\n      // Update the state\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      // Create an object of formData\n      const formData = new FormData(); // Update the formData object\n\n      formData.append(\"file\", this.state.selectedFile, this.state.selectedFile.name);\n      formData.append(\"fileType\", this.state.fileTypeInfo[this.state.selectValue].type);\n      formData.append(\"description\", this.state.description); // Request made to the backend api\n      // Send formData object\n\n      axios.post(this.state.apiUrl + '/upload', formData);\n    };\n\n    this.fileData = () => {\n      //console.log(this.state.selectedFile);\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-t-10px\",\n          children: [\"File Name: \", this.state.selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.getFilesTable = () => {\n      //console.log(this.state.selectedFile);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-hover table-bordered table-striped m-t-15px\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.fileRows\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }, this)\n      }, void 0, false);\n    };\n\n    dotenv.config(); // set \"the state\" (great old school show, btw)\n\n    this.state = {\n      apiUrl: 'http://' + process.env.REACT_APP_UPLOAD_API_HOST + ':' + process.env.REACT_APP_UPLOAD_API_PORT,\n      selectOptions: [],\n      selectValue: 0,\n      fileTypeInfo: [],\n      selectedFile: '',\n      fileTypeHelp: '',\n      fileRows: []\n    };\n    /*\n    this.onFileChange = this.onFileChange.bind(this);\n    this.onTypeChange = this.onTypeChange.bind(this);\n    this.onDescChange = this.onDescChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    */\n  } // could use to break some of this out into functions\n\n\n  componentDidMount() {\n    // grab our file type info and build the select options\n    axios.get(this.state.apiUrl + '/getFileTypes').then(response => {\n      const data = response.data.data;\n      this.setState({\n        fileTypeInfo: data\n      });\n      this.setState({\n        fileTypeHelp: data[this.state.selectValue].help\n      }); // build our file type select drop-down\n\n      this.buildSelectOptions();\n    }); // grab list of files and build a table\n\n    this.buildFileTable();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            className: \"App-logo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"File Upload using React!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"Main\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-hover table-bordered\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"w-15-pct\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"description\",\n                    className: \"form-control\",\n                    onChange: this.onDescChange,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"w-15-pct\",\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"Left m-l-10px\",\n                    onChange: this.onTypeChange,\n                    value: this.state.selectValue,\n                    required: true,\n                    children: this.state.selectOptions\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"w-15-pct\",\n                  children: \"Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    className: \"form-control\",\n                    onChange: this.onFileChange,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"form-text text-muted\",\n                    children: this.state.fileTypeHelp\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: this.onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), \" Upload File\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), this.fileData(), this.getFilesTable()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/data/node/reactjs/src/App.js"],"names":["Component","require","axios","util","dotenv","App","constructor","props","buildSelectOptions","selectOptions","data","state","fileTypeInfo","i","length","push","text","setState","buildFileTable","get","apiUrl","then","response","rows","name","description","onDeleteClick","_id","fileRows","event","delete","headers","target","dataset","id","onFileChange","selectedFile","files","onTypeChange","fileTypeHelp","value","help","selectValue","onDescChange","onSubmit","formData","FormData","append","type","post","fileData","getFilesTable","config","process","env","REACT_APP_UPLOAD_API_HOST","REACT_APP_UPLOAD_API_PORT","componentDidMount","render","logo"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nconst { Component } = require('react');\n\nconst axios = require('axios');\n\n // keep a util handy to dump objects\n const util = require('util');\n //console.log(util.inspect(error, {depth: null}))\n\n // grab our env variables\n const dotenv = require('dotenv');\n\n /*\nconsole.log('--------------------------------------');\nconsole.log(util.inspect(process.env, {depth: null}))\nconsole.log('--------------------------------------');\n*/\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        // grab our environemtn vars\n        dotenv.config();\n    \n        // set \"the state\" (great old school show, btw)\n        this.state = {\n            apiUrl: 'http://' + process.env.REACT_APP_UPLOAD_API_HOST + ':' + process.env.REACT_APP_UPLOAD_API_PORT,\n            selectOptions: [],\n            selectValue: 0,\n            fileTypeInfo: [],\n            selectedFile: '',\n            fileTypeHelp: '',\n            fileRows: []\n        };\n\n        /*\n        this.onFileChange = this.onFileChange.bind(this);\n        this.onTypeChange = this.onTypeChange.bind(this);\n        this.onDescChange = this.onDescChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        */\n    }\n\n    // could use to break some of this out into functions\n    componentDidMount() {  \n        // grab our file type info and build the select options\n        axios.get(this.state.apiUrl + '/getFileTypes').then(response => {\n            const data = response.data.data;\n\n            this.setState({ fileTypeInfo: data });\n            this.setState({ fileTypeHelp: data[this.state.selectValue].help });\n\n            // build our file type select drop-down\n            this.buildSelectOptions();\n        });\n\n        // grab list of files and build a table\n        this.buildFileTable();\n    }\n\n    buildSelectOptions = () => {\n        const selectOptions = [];\n\n        // grab our file type info\n        const data = this.state.fileTypeInfo;\n\n        for(let i = 0; i < data.length; i++) {\n            //console.log(i)\n            selectOptions.push(<option value={i}>{data[i].text}</option>);\n        } \n        this.setState({ selectOptions: selectOptions });\n    }\n\n    buildFileTable = () => {\n        // grab list of files and build a table\n        axios.get(this.state.apiUrl + '/getFiles').then(response => {\n            const data = response.data.data;\n\n            const rows = []\n\n            for(let i = 0; i < data.length; i++) {\n                rows.push(<tr>\n                        <td>{data[i].name}</td>\n                        <td>{data[i].description}</td>\n                        <td className='Delete-Column'>\n                            <button className='btn btn-danger btn-sm' onClick={this.onDeleteClick} data-id={data[i]._id}>\n                                <span></span> Delete\n                            </button>\n                        </td>\n                    </tr>\n                );\n            } \n            this.setState({ fileRows: rows });\n        });\n    }\n\n    onDeleteClick = event => {\n        /*\n        // set up some headers\n        const options = {\n            headers: {'Content-Type': 'application/json; charset=utf-8'}\n        };\n\n        // nuke the file from S3 and the database using query strings\n        axios.delete(this.state.apiUrl + '/delete?fileId=' + event.target.dataset.id, options);\n        */\n\n        // nuke the file from S3 and the database using JSON in body\n        axios.delete(\n            this.state.apiUrl + '/delete', {\n                headers: {\n                    'Content-Type': 'application/json; charset=utf-8'\n                },\n                data: {\n                    'fileId': event.target.dataset.id\n                }\n        });\n    }\n  \n    // On file select (from the pop up)\n    onFileChange = event => {\n        // Update the state\n        this.setState({ selectedFile: event.target.files[0] });\n    };\n\n    // On file type select\n    onTypeChange = event => {\n        // Update the state\n        this.setState({ fileTypeHelp: this.state.fileTypeInfo[event.target.value].help });\n        this.setState({ selectValue: event.target.value });\n    };\n\n    // On description change\n    onDescChange = event => {\n        // Update the state\n        this.setState({ description: event.target.value });\n    };\n  \n    // On file upload (click the upload button)\n    onSubmit = () => {\n        // Create an object of formData\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"file\",\n            this.state.selectedFile,\n            this.state.selectedFile.name\n        );\n\n        formData.append(\n            \"fileType\",\n            this.state.fileTypeInfo[this.state.selectValue].type\n        );\n\n        formData.append(\n            \"description\",\n            this.state.description\n        );\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(this.state.apiUrl + '/upload', formData);\n    };\n  \n    fileData = () => {\n        //console.log(this.state.selectedFile);\n        if (this.state.selectedFile) {\n            return (\n                <p className='m-t-10px'>File Name: {this.state.selectedFile.name}</p>\n            );\n        } \n    };\n\n    getFilesTable = () => {\n        //console.log(this.state.selectedFile);\n        return (\n            <>\n                <table className='table table-hover table-bordered table-striped m-t-15px'>\n                    <tbody>\n                        {this.state.fileRows}\n                    </tbody>\n                </table>\n            </>\n        );\n    }\n  \n    render() {\n        return (\n            <>\n                <div className='App'>\n                    <header className='App-header'>\n                        <img src={logo} className='App-logo' alt='logo' />\n                        <h3>File Upload using React!</h3>\n                    </header>\n                    <div id='Main'>\n                        <table className='table table-hover table-bordered'>\n                            <tbody>\n                                <tr>\n                                    <td className='w-15-pct'>Description</td>\n                                    <td><input type='text' id='description' className='form-control' onChange={this.onDescChange} required /></td>\n                                </tr>\n                                <tr>\n                                    <td className='w-15-pct'>Type</td>\n                                    <td>\n                                        <select className='Left m-l-10px' onChange={this.onTypeChange} value={this.state.selectValue} required>\n                                            {this.state.selectOptions}\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className='w-15-pct'>Image</td>\n                                    <td>\n                                        <input type='file' className='form-control' onChange={this.onFileChange} required />\n                                        <small className='form-text text-muted'>{this.state.fileTypeHelp}</small>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <button type='button' className='btn btn-primary' onClick={this.onSubmit}>\n                            <span></span> Upload File\n                        </button>\n                        {this.fileData()}\n                        {this.getFilesTable()}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}